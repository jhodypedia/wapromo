<div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-2">
  <h4 class="mb-0"><i class="fa fa-message text-primary me-2"></i>Template Pesan</h4>
  <button id="btnAddTemplate" class="btn btn-primary">
    <i class="fa fa-plus me-2"></i>Tambah Template
  </button>
</div>

<div class="card shadow-sm">
  <div class="card-body">
    <div class="table-responsive">
      <table id="templateTable" class="table table-hover align-middle nowrap w-100">
        <thead class="table-light">
          <tr>
            <th style="width:50px">#</th>
            <th>Judul</th>
            <th>Isi</th>
            <th>Link</th>
            <th>Status</th>
            <th style="width:120px">Aksi</th>
          </tr>
        </thead>
        <tbody>
          <% templates.forEach((t,i)=>{ %>
          <tr data-id="<%= t.id %>">
            <td><%= i+1 %></td>
            <td><%= t.title %></td>
            <td style="white-space:pre-wrap; max-width:280px"><%= t.body %></td>
            <td><% if (t.link) { %><a href="<%= t.link %>" target="_blank"><%= t.link %></a><% } %></td>
            <td>
              <span class="badge <%= t.isActive ? 'bg-success' : 'bg-secondary' %>">
                <%= t.isActive ? 'Aktif' : 'Nonaktif' %>
              </span>
            </td>
            <td>
              <div class="btn-group btn-group-sm">
                <button class="btn btn-warning edit-template"><i class="fa fa-edit"></i></button>
                <button class="btn btn-danger delete-template"><i class="fa fa-trash"></i></button>
              </div>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- Modal Create/Edit -->
<div class="modal fade" id="templateModal" tabindex="-1">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header border-0">
        <h5 class="modal-title"><i class="fa fa-pen me-2 text-primary"></i><span id="modalTitle">Tambah Template</span></h5>
        <button class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <form id="templateForm">
        <div class="modal-body">
          <input type="hidden" id="templateId">
          <div class="mb-3">
            <label class="form-label">Judul</label>
            <input type="text" id="title" class="form-control" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Isi Pesan</label>
            <textarea id="body" class="form-control" rows="4" required></textarea>
          </div>
          <div class="mb-3">
            <label class="form-label">Link (opsional)</label>
            <input type="url" id="link" class="form-control">
          </div>
          <div class="mb-3">
            <label class="form-label">Status</label>
            <select id="isActive" class="form-select">
              <option value="true">Aktif</option>
              <option value="false">Nonaktif</option>
            </select>
          </div>
        </div>
        <div class="modal-footer border-0">
          <button class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          <button type="submit" class="btn btn-primary">Simpan</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const table = $("#templateTable").DataTable({
    responsive: true,
    pageLength: 5,
    lengthMenu: [5, 10, 25, 50],
    language: {
      search: "Cari:",
      lengthMenu: "Tampilkan _MENU_",
      info: "Menampilkan _START_ sampai _END_ dari _TOTAL_ data",
      paginate: { next: "»", previous: "«" },
      zeroRecords: "Tidak ada data"
    }
  });

  const modal = new bootstrap.Modal(document.getElementById("templateModal"));
  const form = document.getElementById("templateForm");
  const modalTitle = document.getElementById("modalTitle");

  const idInput = document.getElementById("templateId");
  const titleInput = document.getElementById("title");
  const bodyInput = document.getElementById("body");
  const linkInput = document.getElementById("link");
  const isActiveInput = document.getElementById("isActive");

  // Tambah
  document.getElementById("btnAddTemplate").addEventListener("click", () => {
    form.reset();
    idInput.value = "";
    modalTitle.textContent = "Tambah Template";
    modal.show();
  });

  // Submit (create/update)
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const id = idInput.value;
    const payload = {
      title: titleInput.value,
      body: bodyInput.value,
      link: linkInput.value,
      isActive: isActiveInput.value
    };
    const method = id ? "PUT" : "POST";
    const url = id ? `/templates/${id}` : "/templates";

    try {
      const res = await fetch(url, {
        method,
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
      });
      const json = await res.json();
      if (json.success) {
        Swal.fire("Berhasil", id ? "Template diperbarui" : "Template ditambahkan", "success")
          .then(() => location.reload());
      } else {
        Swal.fire("Error", json.error || "Gagal simpan template", "error");
      }
    } catch (err) {
      Swal.fire("Error", "Server error", "error");
    }
  });

  // Delegation: Edit
  document.body.addEventListener("click", async (e) => {
    if (e.target.closest(".edit-template")) {
      const row = e.target.closest("tr");
      const id = row.dataset.id;
      const res = await fetch(`/templates/${id}`);
      const json = await res.json();
      if (json.success) {
        const t = json.template;
        idInput.value = t.id;
        titleInput.value = t.title;
        bodyInput.value = t.body;
        linkInput.value = t.link || "";
        isActiveInput.value = t.isActive ? "true" : "false";
        modalTitle.textContent = "Edit Template";
        modal.show();
      } else {
        Swal.fire("Error", json.error || "Gagal ambil data", "error");
      }
    }
  });

  // Delegation: Delete
  document.body.addEventListener("click", async (e) => {
    if (e.target.closest(".delete-template")) {
      const row = e.target.closest("tr");
      const id = row.dataset.id;
      const confirm = await Swal.fire({
        title: "Hapus Template?",
        text: "Data ini tidak bisa dikembalikan.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Ya, hapus",
        cancelButtonText: "Batal"
      });
      if (confirm.isConfirmed) {
        const res = await fetch(`/templates/${id}`, { method: "DELETE" });
        const json = await res.json();
        if (json.success) {
          Swal.fire("Deleted", "Template berhasil dihapus", "success")
            .then(() => location.reload());
        } else {
          Swal.fire("Error", json.error || "Gagal hapus", "error");
        }
      }
    }
  });
});
</script>
