<div class="d-flex justify-content-between align-items-center mb-3">
  <h4 class="mb-0"><i class="fa fa-message text-primary me-2"></i>Template Pesan</h4>
  <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#templateModal">
    <i class="fa fa-plus me-2"></i>Tambah Template
  </button>
</div>

<div class="card shadow-sm">
  <div class="card-body">
    <div class="table-responsive">
      <table id="templateTable" class="table table-hover align-middle w-100">
        <thead class="table-light">
          <tr>
            <th style="width:40px">#</th>
            <th>Judul</th>
            <th>Isi</th>
            <th>Link</th>
            <th>Status</th>
            <th style="width:120px">Aksi</th>
          </tr>
        </thead>
        <tbody>
          <% templates.forEach((t, i) => { %>
          <tr data-id="<%= t.id %>">
            <td><%= i+1 %></td>
            <td><%= t.title %></td>
            <td style="white-space:pre-wrap"><%= t.body %></td>
            <td><a href="<%= t.link %>" target="_blank"><%= t.link ? "Link" : "-" %></a></td>
            <td>
              <span class="badge <%= t.isActive ? 'bg-success' : 'bg-secondary' %>">
                <%= t.isActive ? 'Aktif' : 'Nonaktif' %>
              </span>
            </td>
            <td>
              <button class="btn btn-sm btn-warning edit-template"><i class="fa fa-pen"></i></button>
              <button class="btn btn-sm btn-danger delete-template"><i class="fa fa-trash"></i></button>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- Modal Tambah/Edit -->
<div class="modal fade" id="templateModal" tabindex="-1">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <form id="templateForm">
        <div class="modal-header">
          <h5 class="modal-title"><i class="fa fa-pen me-2"></i><span id="modalTitle">Tambah Template</span></h5>
          <button class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="templateId">
          <div class="mb-3">
            <label class="form-label">Judul</label>
            <input type="text" id="title" class="form-control" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Isi Pesan</label>
            <textarea id="body" class="form-control" rows="4" required></textarea>
          </div>
          <div class="mb-3">
            <label class="form-label">Link (opsional)</label>
            <input type="url" id="link" class="form-control">
          </div>
          <div class="mb-3">
            <label class="form-label">Status</label>
            <select id="isActive" class="form-select">
              <option value="true">Aktif</option>
              <option value="false">Nonaktif</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          <button type="submit" class="btn btn-primary">Simpan</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  // Init DataTable
  const table = $('#templateTable').DataTable({
    responsive: true,
    language: {
      search: "Cari:",
      lengthMenu: "Tampilkan _MENU_ entri",
      info: "Menampilkan _START_ - _END_ dari _TOTAL_ data",
      paginate: { previous: "‹", next: "›" }
    }
  });

  // Tambah Template
  document.querySelector("[data-bs-target='#templateModal']").addEventListener("click", () => {
    document.getElementById("templateForm").reset();
    document.getElementById("templateId").value = "";
    document.getElementById("modalTitle").innerText = "Tambah Template";
  });

  // Submit Form (Tambah / Edit)
  document.getElementById("templateForm").addEventListener("submit", async (e) => {
    e.preventDefault();
    const id = document.getElementById("templateId").value;
    const payload = {
      title: document.getElementById("title").value,
      body: document.getElementById("body").value,
      link: document.getElementById("link").value,
      isActive: document.getElementById("isActive").value
    };

    try {
      const res = await fetch(id ? `/templates/${id}` : "/templates/new", {
        method: id ? "PUT" : "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
      });
      const json = await res.json();
      if (json.success || res.redirected || res.ok) {
        Swal.fire("Berhasil", id ? "Template diperbarui" : "Template ditambahkan", "success")
          .then(() => location.reload());
      } else {
        Swal.fire("Error", json.error || "Gagal simpan template", "error");
      }
    } catch (err) {
      Swal.fire("Error", "Terjadi kesalahan server", "error");
    }
  });

  // Edit
  document.querySelectorAll(".edit-template").forEach(btn => {
    btn.addEventListener("click", () => {
      const tr = btn.closest("tr");
      const id = tr.dataset.id;
      const title = tr.children[1].innerText;
      const body = tr.children[2].innerText;
      const link = tr.children[3].innerText === "Link" ? tr.children[3].querySelector("a").href : "";
      const status = tr.querySelector("span.badge").innerText === "Aktif" ? "true" : "false";

      document.getElementById("templateId").value = id;
      document.getElementById("title").value = title;
      document.getElementById("body").value = body;
      document.getElementById("link").value = link;
      document.getElementById("isActive").value = status;

      document.getElementById("modalTitle").innerText = "Edit Template";
      new bootstrap.Modal(document.getElementById("templateModal")).show();
    });
  });

  // Delete
  document.querySelectorAll(".delete-template").forEach(btn => {
    btn.addEventListener("click", async () => {
      const tr = btn.closest("tr");
      const id = tr.dataset.id;

      const confirm = await Swal.fire({
        title: "Hapus Template?",
        text: "Data tidak bisa dikembalikan.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Ya, hapus",
        cancelButtonText: "Batal"
      });
      if (!confirm.isConfirmed) return;

      try {
        const res = await fetch(`/templates/${id}`, { method: "DELETE" });
        const json = await res.json();
        if (json.success) {
          Swal.fire("Berhasil", "Template dihapus", "success")
            .then(() => location.reload());
        } else {
          Swal.fire("Error", json.error || "Gagal hapus template", "error");
        }
      } catch (err) {
        Swal.fire("Error", "Server error saat hapus", "error");
      }
    });
  });
});
</script>
